{"version":3,"sources":["constants.js","components/diceRoller.jsx","components/mapCell.jsx","components/character.jsx","components/spellCircle.jsx","components/boardMap.jsx","components/mapCanvas.jsx","components/characterCreator.jsx","components/characterCreatorPopUp.jsx","components/actionsMenu.jsx","apiUtils.js","components/spellCircleCreator.jsx","components/spellCircleCreatorPopUp.jsx","components/loginForm.jsx","components/gameMenu.jsx","components/forgotPasswordForm.jsx","components/registrationForm.jsx","components/aboutPage.jsx","components/welcomeScreen.jsx","components/tempMessage.jsx","components/resetPasswordForm.jsx","components/exitWarningPopUp.jsx","components/playersLinkPopUp.jsx","components/App.js","serviceWorker.js","index.js"],"names":["IMAGES_PATH","process","CHARACTER_IMAGES_PATH","AVATAR_IMG_URLS","ranger","rogue","sorcerer","warlock","fighter","scorbat","dragon","beetle","balrog","alligator","CURSOR_IMAGES","CURSOR_IMAGES_PATH","DefaultFallbackComponent","componentStack","error","toString","DiceRoller","state","diceType","diceCount","resultSum","diceResults","isDiceNumberValid","handleRoll","setState","sum","i","nextRes","Math","floor","random","push","this","designClass","props","isSmallerScreen","className","htmlFor","type","name","value","id","defaultChecked","onChange","event","target","step","min","max","replace","onClick","map","res","key","Component","MapCell","borderWidth","cell","cursorHover","cellSize","border","background","width","height","wall","cursor","selected","onMouseEnterCell","style","getCellStyle","onMouseEnter","Character","position","transparent","itemDeletionModeOn","clickable","borderStyle","opacity","top","topLeft","row","left","col","pointerEvents","character","image","imageSrc","url","file","src","alt","getStyle","title","SpellCircle","color","spellCircle","transparentColor","r","g","b","radius","borderRadius","owner","BoardMap","matrix","selectedChar","characters","selectedCircle","spellCircles","onCellClick","onCharClick","onCalcCharPosition","placingChar","onSpellCircleClick","onCalcSpellCirclePosition","placingCircle","j","getBackgroundClass","char","MapCanvas","scale","translation","x","y","mapImage","backgroundImage","mapBgImg","rowCount","colCount","avatarsList","Object","values","CharacterCreator","characterName","avatarImage","missingFields","onPickAvatar","handleCancelCreation","initiateState","onCancel","handleCreateButtonClick","onCreation","isHeight","newVal","Number","path","avatarFile","placeholder","required","onChangeSize","images","avatar","onPick","CharacterCreatorPopUp","handleCharacterCreationClick","stateData","closePopup","onCharacterCreation","innerClass","ActionsMenu","onSpellCircleCreation","onCharacterCircleDelete","onShowPlayersLink","enableDeletion","onFinishDeletion","onExitToMenu","gameMaster","buttonTopMargin","disabled","CallLoginAPI","loginData","sendRequest","CallRegisterAPI","userData","CallGetGameDataAPI","authToken","undefined","CallSaveNewGameDataAPI","gameState","CallUpdateGameDataAPI","API_URL","createRequest","method","bodyObject","headers","body","JSON","stringify","urlEnd","a","req","console","debug","fetch","json","data","status","message","stack","spellName","ownerName","isRadiusValid","newRadiusVal","onChangeRadius","rgb","SpellCircleCreatorPopUp","handleSpellCircleCreationClick","LoginForm","email","password","errorMessage","toGameMenu","handleLoginFormSubmit","e","preventDefault","onLogin","then","userName","to","onSubmit","_gameMenuMounted","GameMenu","toLogin","toMap","gameDataExists","continueGameText","handleLogOutClick","onLogOut","handleStartNewGameButtonClick","showWarning","beginNewGame","onStartANewGame","handleContinueGameClick","onContinueSavedGame","cancelRedirectFromMap","checkForExistingGameData","nextProps","href","menuDesignClass","renderGameMenu","renderNotLoggedInError","ForgotPasswordForm","errMessage","messageUnderBox","handleSendButtonClick","callResetPasswordSendAPI","emailSent","RegistrationForm","handleRegisterFormSubmit","onRegistered","AboutPage","MISC_IMAGES_PATH","WelcomeScreen","onNewGame","onRegisteredNewUser","onLogIn","exact","from","TempMessage","textAlignLast","ResetPasswordForm","newPassword","confirmPassword","tokenValid","isLoading","handleChangePasswordFormSubmit","onPasswordReset","getAuthTokenFromParams","isTokenMatchesUSer","hrefParts","window","location","split","length","renderLoadingPage","renderPasswordResetPage","renderAccessDeniedPage","ExitWarningPopUp","handleExitToMenu","handleCancelExit","PlayersLinkPopUp","handleCopyToClipboardClick","copy","gameLink","onCopyToClipboard","handleCloseClick","log","textArea","select","document","execCommand","rows","App","walls","ceil","showTempMessage","tempMessageText","bgImageLink","resetPasswordScreen","showCharacterCreatorPopup","showSpellCircleCreatorPopup","showExitWarningPopUp","showGameMenu","updating","showPlayerLinkPopUp","handleCellClick","triggerDeselect","spellCircleInd","moveSpellCircle","handleSaveGame","getSpellCirclesArrWithoutSelection","getCharsArrWithoutSelection","charInd","moveCharacter","handleKeyUp","handleCharClick","deleteCharacter","handleSpellCircleClick","deleteSpellCircle","calcCharPosition","xPixels","yPixels","topLeftRow","topLeftCol","widthCells","heightCells","calcSpellCirclePosition","handleMouseEnterCell","handleCharacterCreation","newChar","toggleCharacterCreatorPopup","handleSpellCircleCreation","newCircle","toggleItemDeletionMode","toggleSpellCircleCreatorPopup","togglePlayersLinkPopUp","toggleExitWarningPopUp","gameStateToSave","createOrUpdateGameState","handleRegisteredNewUser","handleStartNewGame","eraseRes","initiateGame","handleContinueSavedGame","setStateFromSavedGameData","handleEnterSavedGameAsMaster","handlePasswordResetComplete","handleLogIn","createMatrix","includes","localStorage","removeItem","savedGameData","myarr","isCellWall","filter","c","charactersCopy","pop","spellCirclesCopy","charToDelete","spellCircleToDelete","selectedCells","lastRowInd","lastColInd","checkIndicesValid","warn","smallRow","smallCol","largeRow","largeCol","indexOf","isNewCharPosValid","circleInd","newPositionInd","selectedCharCopy","CloneDeep","getSelectedCharCells","addEventListener","getItem","updateMapIntervalID","setInterval","removeEventListener","clearInterval","body_object","resGet","resPost","messageText","timeoutMs","setTimeout","FallbackComponent","sideBarWidthCols","mapAreaWidthCols","renderMapArea","renderSideBar","renderPopUps","renderPasswordResetScreen","renderMapMainScreen","renderWelcomeScreen","debounce","onMount","withSizes","Boolean","hostname","match","renderApp","MAP_IMAGES_PATH","browserHandler","chrome","firefox","opera","default","browser","ReactDOM","render","StrictMode","isMobile","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9a7e8ee6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst IMAGES_PATH = process.env.PUBLIC_URL + \"/images/\";\r\n\r\nconst CHARACTER_IMAGES_PATH = IMAGES_PATH + \"characters/\";\r\nconst MAP_IMAGES_PATH = IMAGES_PATH + \"maps/\";\r\nconst MISC_IMAGES_PATH = IMAGES_PATH + \"misc/\";\r\nconst CURSOR_IMAGES_PATH = IMAGES_PATH + \"cursors/\";\r\n\r\nexport const AVATAR_IMG_URLS = {\r\n  ranger: CHARACTER_IMAGES_PATH + \"ranger.png\",\r\n  rogue: CHARACTER_IMAGES_PATH + \"rogue.png\",\r\n  sorcerer: CHARACTER_IMAGES_PATH + \"sorcerer.png\",\r\n  warlock: CHARACTER_IMAGES_PATH + \"warlock.png\",\r\n  fighter: CHARACTER_IMAGES_PATH + \"fighter.png\",\r\n  scorbat: CHARACTER_IMAGES_PATH + \"scorbat.png\",\r\n  dragon: CHARACTER_IMAGES_PATH + \"dragon.png\",\r\n  beetle: CHARACTER_IMAGES_PATH + \"beetle.png\",\r\n  balrog: CHARACTER_IMAGES_PATH + \"balrog.png\",\r\n  alligator: CHARACTER_IMAGES_PATH + \"alligator.png\",\r\n};\r\n\r\nexport const CURSOR_IMAGES = {\r\n  move: CURSOR_IMAGES_PATH + \"move.png\",\r\n  pointer: CURSOR_IMAGES_PATH + \"pointer.png\",\r\n  delete: CURSOR_IMAGES_PATH + \"delete.png\",\r\n};\r\n\r\nexport const PLAYERS_GAME_URL =\r\n  \"https://wwwsapir.github.io/dnd-online-board/#/game/\";\r\n\r\nexport const GAMEPLAY_IMG_PATH = MISC_IMAGES_PATH + \"gameplay.png\";\r\nexport const DEFAULT_MAP_IMG_PATH = MAP_IMAGES_PATH + \"default.jpg\";\r\n\r\nexport const MIN_CHARACTER_SIZE_SQUARES = 1;\r\nexport const MAX_CHARACTER_SIZE_SQUARES = 6;\r\nexport const MIN_SPELL_CIRCLE_RADIUS_FEET = 5;\r\nexport const MAX_SPELL_CIRCLE_RADIUS_FEET = 60;\r\nexport const MIN_DICE_FOR_ROLL = 1;\r\nexport const MAX_DICE_FOR_ROLL = 30;\r\n\r\nexport const DefaultFallbackComponent = ({ componentStack, error }) => (\r\n  <div>\r\n    <p>\r\n      <strong>\r\n        Oops! An error occured! I guess I haven't done enough QA because I\r\n        really wanted to show you the project early! But hey, at least I caught\r\n        the error using a boundary :)\r\n      </strong>\r\n    </p>\r\n    <p>Here’s what I know about the error:</p>\r\n    <p>\r\n      <strong>Error:</strong> {error.toString()}\r\n    </p>\r\n    <p>\r\n      <strong>Stacktrace:</strong> {componentStack}\r\n    </p>\r\n  </div>\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./sideBar.css\";\r\nimport { MIN_DICE_FOR_ROLL, MAX_DICE_FOR_ROLL } from \"../constants\";\r\n\r\nclass DiceRoller extends Component {\r\n  state = {\r\n    diceType: 4,\r\n    diceCount: 1,\r\n    resultSum: null,\r\n    diceResults: [],\r\n    isDiceNumberValid: true,\r\n  };\r\n\r\n  handleRoll = () => {\r\n    const { diceCount, diceType } = this.state;\r\n    if (MIN_DICE_FOR_ROLL > diceCount || diceCount > MAX_DICE_FOR_ROLL) {\r\n      this.setState({\r\n        isDiceNumberValid: false,\r\n        resultSum: null,\r\n        diceResults: [],\r\n      });\r\n    } else {\r\n      let sum = 0;\r\n      let diceResults = [];\r\n      for (let i = 0; i < diceCount; i++) {\r\n        const nextRes = Math.floor(Math.random() * diceType) + 1;\r\n        sum += nextRes;\r\n        diceResults.push(nextRes);\r\n      }\r\n      this.setState({ resultSum: sum, diceResults, isDiceNumberValid: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { diceCount, resultSum, diceResults, isDiceNumberValid } = this.state;\r\n    const designClass = this.props.isSmallerScreen ? \"MenuUlSmallerScreen\" : \"MenuUl\";\r\n    return (\r\n      <ul\r\n        className={\r\n          \"nav nav-tabs flex-column bg-dark row w-100 ml-1 \" + designClass\r\n        }\r\n      >\r\n        <h4 className=\"mb-1\">\r\n          <span className=\"creatorHeader\">Roll Dice</span>\r\n        </h4>\r\n        <li className=\"nav-item\">\r\n          <label className=\"mr-3 mb-2 radio control-label\">Dice type:</label>\r\n          <span>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-4\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={4}\r\n                id=\"d-4\"\r\n                defaultChecked\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-4\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-6\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={6}\r\n                id=\"d-6\"\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-6\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-8\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={8}\r\n                id=\"d-8\"\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-8\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-10\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={10}\r\n                id=\"d-10\"\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-10\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-12\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={12}\r\n                id=\"d-12\"\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-12\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-20\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={20}\r\n                id=\"d-20\"\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-20\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"d-100\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"DieType\"\r\n                value={100}\r\n                id=\"d-100\"\r\n                onChange={(event) =>\r\n                  this.setState({ diceType: event.target.value })\r\n                }\r\n              />\r\n              D-100\r\n            </label>\r\n          </span>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <label className=\"mr-1 col-md-5 p-0\">How many dice? </label>\r\n          <input\r\n            className=\"input-group-sm mb-3 form-control col-md-5 d-inline mt-1\"\r\n            id=\"diceCount\"\r\n            type=\"number\"\r\n            step={1}\r\n            min={MIN_DICE_FOR_ROLL}\r\n            max={MAX_DICE_FOR_ROLL}\r\n            value={diceCount}\r\n            onChange={(event) =>\r\n              this.setState({ diceCount: event.target.value.replace(/\\D/, \"\") })\r\n            }\r\n          />\r\n          <button\r\n            onClick={this.handleRoll}\r\n            className=\"btn btn-primary form-control mt-1 col-md-3 d-inline\"\r\n          >\r\n            Roll\r\n          </button>\r\n          {isDiceNumberValid && resultSum ? (\r\n            <label className=\"mr-3 mb-2 radio control-label col-md-8 d-inline\">\r\n              Roll Result Sum:\r\n              <span className=\"rollSum ml-3\">{resultSum}</span>\r\n            </label>\r\n          ) : null}\r\n        </li>\r\n        {isDiceNumberValid && resultSum ? (\r\n          <Fragment>\r\n            <label className=\"mr-3 mb-2 radio control-label mt-2\">\r\n              Dice results:\r\n              <div className=\"mt-1 row ml-1 mt-1\">\r\n                {diceResults.map((res, i) => (\r\n                  <div key={i} className=\"rollResult d-inline ml-1\">\r\n                    {res}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </label>\r\n          </Fragment>\r\n        ) : !isDiceNumberValid ? (\r\n          <li className=\"nav-item col mt-3\">\r\n            <h4>\r\n              <span className=\"badge badge-danger\">\r\n                Dice number should be {MIN_DICE_FOR_ROLL}-{MAX_DICE_FOR_ROLL}\r\n              </span>\r\n            </h4>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiceRoller;\r\n","import React, { Component } from \"react\";\r\nimport \"./mapCell.css\";\r\n\r\nclass MapCell extends Component {\r\n  getCellStyle() {\r\n    const { borderWidth, cell, cursorHover, cellSize } = this.props;\r\n    let border = \"solid black \";\r\n    border += borderWidth + \"px\";\r\n    let background = \"rgba(0, 0, 0, \";\r\n    background += cell.wall ? \"0.4)\" : \"0)\";\r\n    return {\r\n      width: cellSize,\r\n      height: cellSize,\r\n      border,\r\n      background,\r\n      cursor: cursorHover\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.selected) {\r\n    }\r\n    const { onClick, cell, onMouseEnterCell } = this.props;\r\n    return (\r\n      <div\r\n        className=\"CellStyle\"\r\n        style={this.getCellStyle()}\r\n        onClick={() => onClick(cell)}\r\n        onMouseEnter={() => onMouseEnterCell(cell)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapCell;\r\n","import React, { Component } from \"react\";\r\nimport { CURSOR_IMAGES } from \"../constants\";\r\n\r\nclass Character extends Component {\r\n  getStyle() {\r\n    const {\r\n      selected,\r\n      position,\r\n      borderWidth,\r\n      transparent,\r\n      itemDeletionModeOn,\r\n      clickable,\r\n    } = this.props;\r\n    let borderStyle = selected || itemDeletionModeOn ? \"solid red\" : \"none\";\r\n    borderStyle += \" \" + borderWidth + \"px\";\r\n    const opacity = transparent ? 0.45 : 1;\r\n    return {\r\n      width: position.width,\r\n      height: position.height,\r\n      position: \"absolute\",\r\n      top: position.topLeft.row,\r\n      left: position.topLeft.col,\r\n      border: borderStyle,\r\n      cursor: itemDeletionModeOn\r\n        ? \"url(\" + CURSOR_IMAGES.delete + \"), pointer\"\r\n        : clickable\r\n        ? \"url(\" + CURSOR_IMAGES.pointer + \"), pointer\"\r\n        : \"url(\" + CURSOR_IMAGES.move + \"), move\",\r\n      opacity,\r\n      pointerEvents: clickable ? \"auto\" : \"none\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { character, onClick } = this.props;\r\n    if (!character) {\r\n      return \"\";\r\n    }\r\n    const { image } = this.props.character;\r\n    const imageSrc = image.url ? image.url : image.file;\r\n\r\n    return (\r\n      <img\r\n        src={imageSrc}\r\n        alt={character.name}\r\n        style={this.getStyle()}\r\n        onClick={() => onClick(character)}\r\n        title={character.name}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Character;\r\n","import React, { Component } from \"react\";\r\nimport { CURSOR_IMAGES } from \"../constants\";\r\n\r\nclass SpellCircle extends Component {\r\n  getStyle() {\r\n    const {\r\n      position,\r\n      itemDeletionModeOn,\r\n      borderWidth,\r\n      clickable,\r\n      selected,\r\n    } = this.props;\r\n    const { color } = this.props.spellCircle;\r\n    const transparentColor =\r\n      \"rgb(\" + color.r + \", \" + color.g + \", \" + color.b + \", 0.5) \";\r\n    let borderStyle = null;\r\n    if (itemDeletionModeOn || selected) {\r\n      borderStyle = \"solid rgb(255, 0, 0, 1) \" + (borderWidth + 1) + \"px\";\r\n    }\r\n    return {\r\n      position: \"absolute\",\r\n      top: position.row,\r\n      left: position.col,\r\n      height: position.radius * 2,\r\n      width: position.radius * 2,\r\n      background: transparentColor,\r\n      borderRadius: position.radius,\r\n      cursor: itemDeletionModeOn\r\n        ? \"url(\" + CURSOR_IMAGES.delete + \"), pointer\"\r\n        : clickable\r\n        ? \"url(\" + CURSOR_IMAGES.pointer + \"), pointer\"\r\n        : \"url(\" + CURSOR_IMAGES.move + \"), move\",\r\n      border: borderStyle,\r\n      pointerEvents: clickable ? \"auto\" : \"none\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { spellCircle, onClick } = this.props;\r\n    if (!spellCircle) {\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={this.getStyle()}\r\n        onClick={() => onClick(spellCircle)}\r\n        title={\r\n          spellCircle.name +\r\n          (spellCircle.owner ? \". Owner: \" + spellCircle.owner : null)\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellCircle;\r\n","import React, { Component } from \"react\";\r\nimport MapCell from \"./mapCell\";\r\nimport Character from \"./character\";\r\nimport SpellCircle from \"./spellCircle\";\r\nimport \"./boardMap.css\";\r\nimport { CURSOR_IMAGES } from \"../constants\";\r\n\r\nclass BoardMap extends Component {\r\n  getBackgroundClass() {\r\n    return this.props.itemDeletionModeOn ? \"DeletionMode\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      matrix,\r\n      selectedChar,\r\n      characters,\r\n      selectedCircle,\r\n      spellCircles,\r\n      cellSize,\r\n      borderWidth,\r\n      onCellClick,\r\n      onCharClick,\r\n      onCalcCharPosition,\r\n      onMouseEnterCell,\r\n      placingChar,\r\n      itemDeletionModeOn,\r\n      onSpellCircleClick,\r\n      onCalcSpellCirclePosition,\r\n      placingCircle,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {matrix.map((row, i) => (\r\n            <div key={i}>\r\n              {row.map((cell, j) => (\r\n                <MapCell\r\n                  key={j}\r\n                  cell={cell}\r\n                  cellSize={cellSize}\r\n                  onClick={onCellClick}\r\n                  borderWidth={borderWidth}\r\n                  cursorHover={\r\n                    placingCircle || placingChar\r\n                      ? \"url(\" + CURSOR_IMAGES.pointer + \"), pointer\"\r\n                      : \"url(\" + CURSOR_IMAGES.move + \"), move\"\r\n                  }\r\n                  onMouseEnterCell={onMouseEnterCell}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={this.getBackgroundClass()}>\r\n          {spellCircles.map((spellCircle, i) => (\r\n            <SpellCircle\r\n              key={i}\r\n              spellCircle={spellCircle}\r\n              borderWidth={borderWidth}\r\n              position={onCalcSpellCirclePosition(spellCircle)}\r\n              onClick={onSpellCircleClick}\r\n              itemDeletionModeOn={itemDeletionModeOn}\r\n              placingCircle={placingCircle}\r\n              clickable={\r\n                (!placingChar && !placingCircle && !itemDeletionModeOn) ||\r\n                itemDeletionModeOn\r\n              }\r\n              selected={selectedCircle === spellCircle}\r\n            />\r\n          ))}\r\n          {placingCircle ? (\r\n            <SpellCircle\r\n              spellCircle={placingCircle}\r\n              borderWidth={borderWidth}\r\n              position={onCalcSpellCirclePosition(placingCircle)}\r\n              onClick={onSpellCircleClick}\r\n              itemDeletionModeOn={itemDeletionModeOn}\r\n              placingCircle={placingCircle}\r\n              clickable={false}\r\n              selected={false}\r\n            />\r\n          ) : null}\r\n          {characters.map((char, i) => (\r\n            <Character\r\n              key={i}\r\n              character={char}\r\n              selected={selectedChar === char}\r\n              position={onCalcCharPosition(char)}\r\n              onClick={onCharClick}\r\n              borderWidth={borderWidth}\r\n              transparent={placingChar === char}\r\n              itemDeletionModeOn={itemDeletionModeOn}\r\n              clickable={\r\n                (!placingChar && !placingCircle && !itemDeletionModeOn) ||\r\n                itemDeletionModeOn\r\n              }\r\n            />\r\n          ))}\r\n          {placingChar ? (\r\n            <Character\r\n              character={placingChar}\r\n              selected={false}\r\n              position={onCalcCharPosition(placingChar)}\r\n              onClick={onCharClick}\r\n              borderWidth={borderWidth}\r\n              transparent={true}\r\n              itemDeletionModeOn={itemDeletionModeOn}\r\n              clickable={false}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardMap;\r\n","import React, { Component } from \"react\";\r\nimport { MapInteractionCSS } from \"react-map-interaction\";\r\nimport \"./mapCanvas.css\";\r\nimport BoardMap from \"./boardMap\";\r\n\r\nclass MapCanvas extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scale: 2,\r\n      translation: { x: 0, y: 0 },\r\n    };\r\n  }\r\n\r\n  getStyle() {\r\n    const { mapImage } = this.props;\r\n    const backgroundImage = mapImage.url\r\n      ? \"url(\" + mapImage.url + \")\"\r\n      : mapImage.file;\r\n    return {\r\n      mapBgImg: {\r\n        height: this.props.cellSize * this.props.rowCount,\r\n        width: this.props.cellSize * this.props.colCount,\r\n        backgroundImage,\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      rowCount,\r\n      colCount,\r\n      matrix,\r\n      cellSize,\r\n      borderWidth,\r\n      selectedChar,\r\n      characters,\r\n      onCellClick,\r\n      onCharClick,\r\n      onCalcCharPosition,\r\n      onMouseEnterCell,\r\n      placingChar,\r\n      itemDeletionModeOn,\r\n      spellCircles,\r\n      onSpellCircleClick,\r\n      onCalcSpellCirclePosition,\r\n      placingCircle,\r\n      selectedCircle,\r\n    } = this.props;\r\n    const { scale, translation } = this.state;\r\n\r\n    return (\r\n      <MapInteractionCSS\r\n        scale={scale}\r\n        translation={translation}\r\n        onChange={({ scale, translation }) =>\r\n          this.setState({ scale, translation })\r\n        }\r\n      >\r\n        <div className=\"MapBgImg\" style={this.getStyle().mapBgImg}>\r\n          <BoardMap\r\n            rowCount={rowCount}\r\n            colCount={colCount}\r\n            matrix={matrix}\r\n            cellSize={cellSize}\r\n            borderWidth={borderWidth}\r\n            selectedChar={selectedChar}\r\n            characters={characters}\r\n            selectedCircle={selectedCircle}\r\n            spellCircles={spellCircles}\r\n            onCellClick={onCellClick}\r\n            onCharClick={onCharClick}\r\n            onCalcCharPosition={onCalcCharPosition}\r\n            onMouseEnterCell={onMouseEnterCell}\r\n            placingChar={placingChar}\r\n            itemDeletionModeOn={itemDeletionModeOn}\r\n            onSpellCircleClick={onSpellCircleClick}\r\n            onCalcSpellCirclePosition={onCalcSpellCirclePosition}\r\n            placingCircle={placingCircle}\r\n          />\r\n        </div>\r\n      </MapInteractionCSS>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapCanvas;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./sideBar.css\";\r\nimport ImagePicker from \"react-image-picker\";\r\nimport \"react-image-picker/dist/index.css\";\r\nimport {\r\n  AVATAR_IMG_URLS,\r\n  MIN_CHARACTER_SIZE_SQUARES,\r\n  MAX_CHARACTER_SIZE_SQUARES,\r\n} from \"../constants\";\r\n\r\nconst avatarsList = Object.values(AVATAR_IMG_URLS);\r\n\r\nclass CharacterCreator extends Component {\r\n  state = {\r\n    characterName: \"\",\r\n    height: 1,\r\n    width: 1,\r\n    avatarImage: null,\r\n    missingFields: false,\r\n  };\r\n\r\n  initiateState() {\r\n    this.setState({\r\n      characterName: \"\",\r\n      height: MIN_CHARACTER_SIZE_SQUARES,\r\n      width: MIN_CHARACTER_SIZE_SQUARES,\r\n      avatarImage: null,\r\n      //   type: null,\r\n      //   avatar: \"Choose File\"\r\n      missingFields: false,\r\n    });\r\n  }\r\n\r\n  onChangeSize(event, isHeight) {\r\n    let newVal = Number(event.target.value.replace(/\\D/, \"\"));\r\n    if (event.target.min > newVal || newVal > event.target.max) {\r\n      newVal = isHeight ? this.state.height : this.state.width;\r\n    }\r\n    isHeight\r\n      ? this.setState({ height: newVal })\r\n      : this.setState({ width: newVal });\r\n  }\r\n\r\n  onPickAvatar = (avatarImage) => {\r\n    this.setState({ avatarImage });\r\n  };\r\n\r\n  getFileName(path) {\r\n    return path.replace(/^.*[\\\\\\/]/, \"\");\r\n  }\r\n\r\n  handleCancelCreation = () => {\r\n    this.initiateState();\r\n    this.props.onCancel();\r\n  };\r\n\r\n  handleCreateButtonClick = () => {\r\n    const { characterName, height, width } = { ...this.state };\r\n    let { avatarImage } = { ...this.state };\r\n    if (!characterName || height <= 0 || width <= 0 || !avatarImage) {\r\n      this.setState({ missingFields: true });\r\n      return;\r\n    }\r\n    this.setState({ missingFields: false });\r\n    this.initiateState();\r\n    avatarImage = avatarImage.src;\r\n    this.props.onCreation({ characterName, height, width, avatarImage });\r\n  };\r\n\r\n  render() {\r\n    const { characterName, height, width, avatarFile } = this.state;\r\n    return (\r\n      <ul className=\"nav nav-tabs flex-column bg-dark row w-100 p-20 MenuUl\">\r\n        <div>\r\n          <h4 className=\"mb-4\">\r\n            <span className=\"creatorHeader ml-2\">Add a New Character</span>\r\n            \r\n          </h4>\r\n        </div>\r\n        <li className=\"nav-item\">\r\n          <div className=\"col\">\r\n            <input\r\n              className=\"input-group-sm form-control\"\r\n              id=\"characterName\"\r\n              value={characterName}\r\n              placeholder=\"Character name\"\r\n              required\r\n              onChange={(event) =>\r\n                this.setState({ characterName: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n        </li>\r\n        <li className=\"nav-item col\">\r\n          <div className=\"row mt-3 mb-3\">\r\n            <span className=\"form-group\" className=\"col-6 d-inline\">\r\n              <label className=\"d-inline col-5\" htmlFor=\"width\">\r\n                Width in squares:\r\n              </label>\r\n              <input\r\n                className=\"input-group-sm form-control d-inline col-7\"\r\n                id=\"width\"\r\n                type=\"number\"\r\n                step={MIN_CHARACTER_SIZE_SQUARES}\r\n                min={MIN_CHARACTER_SIZE_SQUARES}\r\n                max={MAX_CHARACTER_SIZE_SQUARES}\r\n                value={width}\r\n                required\r\n                onChange={(event) => this.onChangeSize(event, false)}\r\n              />\r\n            </span>\r\n            <span className=\"form-group\" className=\"col-6 d-inline\">\r\n              <label className=\"d-inline col-5\" htmlFor=\"height\">\r\n                Height in squares:\r\n              </label>\r\n              <input\r\n                className=\"input-group-sm form-control d-inline col-7\"\r\n                id=\"height\"\r\n                type=\"number\"\r\n                step={MIN_CHARACTER_SIZE_SQUARES}\r\n                min={MIN_CHARACTER_SIZE_SQUARES}\r\n                max={MAX_CHARACTER_SIZE_SQUARES}\r\n                value={height}\r\n                required\r\n                onChange={(event) => this.onChangeSize(event, true)}\r\n              />\r\n            </span>\r\n          </div>\r\n        </li>\r\n        <li className=\"nav-item col\">\r\n          <span className=\"form-group\">\r\n            <label className=\"mr-3 mb-3\">Choose Avatar:</label>\r\n            <span>\r\n              <ImagePicker\r\n                images={avatarsList.map((avatar, i) => ({\r\n                  src: avatar,\r\n                  value: i,\r\n                }))}\r\n                onPick={this.onPickAvatar}\r\n              />\r\n            </span>\r\n          </span>\r\n        </li>\r\n        {/* <li className=\"nav-item col\">\r\n          <label className=\"mr-3 mb-2 radio control-label\">\r\n            Character type:\r\n          </label>\r\n          <span>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"player\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"CharType\"\r\n                value=\"Player\"\r\n                id=\"player\"\r\n                onChange={event => this.setState({ type: event.target.value })}\r\n              />\r\n              Player\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"enemy\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"CharType\"\r\n                value=\"Enemy\"\r\n                id=\"enemy\"\r\n                onChange={event => this.setState({ type: event.target.value })}\r\n              />\r\n              Enemy\r\n            </label>\r\n            <label className=\"ml-1 mr-2 radio control-label\" htmlFor=\"ally\">\r\n              <input\r\n                className=\"radio m-1\"\r\n                type=\"radio\"\r\n                name=\"CharType\"\r\n                value=\"Ally\"\r\n                id=\"ally\"\r\n                onChange={event => this.setState({ type: event.target.value })}\r\n              />\r\n              Ally\r\n            </label>\r\n          </span>\r\n        </li>\r\n        <li className=\"nav-item col\">\r\n          <label className=\"mr-1\">Avatar: </label>\r\n          <div className=\"custom-file mb-2\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"custom-file-input\"\r\n              id=\"inputGroupFile01\"\r\n              onChange={event => {\r\n                this.setState({ avatar: event.target.value });\r\n              }}\r\n            />\r\n            <label className=\"custom-file-label\">\r\n              {this.getFileName(avatar)}\r\n            </label>\r\n          </div>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <span className=\"row mt-3\">\r\n            <div className=\"mt-3 col-8 d-inline\">\r\n              <button\r\n                onClick={this.handleCreateButtonClick}\r\n                className=\"btn btn-primary form-control\"\r\n              >\r\n                Create!\r\n              </button>\r\n            </div>\r\n            <div className=\"mt-3 col-4 d-inline\">\r\n              <button\r\n                onClick={this.handleCancelCreation}\r\n                className=\"btn btn-danger form-control\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </span>\r\n        </li>\r\n        {this.state.missingFields ? (\r\n          <li className=\"nav-item col mt-3\">\r\n            <h4>\r\n              <span className=\"badge badge-danger\">\r\n                Not all fields are filled/selected!\r\n              </span>\r\n            </h4>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterCreator;\r\n","import React, { Component } from \"react\";\r\nimport CharacterCreator from \"./characterCreator\";\r\nimport \"./popUp.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass CharacterCreatorPopUp extends Component {\r\n  handleCharacterCreationClick = (stateData) => {\r\n    this.props.closePopup();\r\n    this.props.onCharacterCreation(stateData);\r\n  };\r\n\r\n  handleCancelCreation = () => {\r\n    this.props.closePopup();\r\n  };\r\n\r\n  render() {\r\n    const innerClass = this.props.isSmallerScreen\r\n      ? \"CharacterCreatorPopUpInnerSmallerScreen\"\r\n      : \"CharacterCreatorPopUpInner\";\r\n    return (\r\n      <div className=\"PopUp\">\r\n        <div className={innerClass}>\r\n          <CharacterCreator\r\n            onCreation={this.handleCharacterCreationClick}\r\n            onCancel={this.handleCancelCreation}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterCreatorPopUp;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./sideBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass ActionsMenu extends Component {\r\n  render() {\r\n    const {\r\n      onCharacterCreation,\r\n      onSpellCircleCreation,\r\n      onCharacterCircleDelete,\r\n      onShowPlayersLink,\r\n      enableDeletion,\r\n      itemDeletionModeOn,\r\n      onFinishDeletion,\r\n      onExitToMenu,\r\n      gameMaster,\r\n      isSmallerScreen,\r\n    } = this.props;\r\n    const designClass = isSmallerScreen ? \"MenuUlSmallerScreen\" : \"MenuUl\";\r\n    const buttonTopMargin = isSmallerScreen ? 2 : 3;\r\n    return (\r\n      <ul\r\n        className={\r\n          \"nav nav-tabs flex-column row w-100 ml-1 \" + designClass\r\n        }\r\n      >\r\n        <h4 className=\"mb-1\">\r\n          <span className=\"creatorHeader\">Actions</span>\r\n        </h4>\r\n        {itemDeletionModeOn ? (\r\n          <li className=\"nav-item\">\r\n            <h5 className=\"mt-3\">Click items on the map to delete them</h5>\r\n            <button\r\n              onClick={onFinishDeletion}\r\n              className=\"btn btn-danger form-control mt-1\"\r\n            >\r\n              Finish Deletion\r\n            </button>\r\n          </li>\r\n        ) : (\r\n          <span>\r\n            <li className=\"nav-item\">\r\n              <button\r\n                onClick={onCharacterCreation}\r\n                className={\"btn btn-primary form-control mt-\" + buttonTopMargin}\r\n              >\r\n                Create a New Character\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button\r\n                onClick={onSpellCircleCreation}\r\n                className={\"btn btn-primary form-control mt-\" + buttonTopMargin}\r\n              >\r\n                Create a Spell Circle\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button\r\n                onClick={onCharacterCircleDelete}\r\n                className={\"btn btn-primary form-control mt-\" + buttonTopMargin}\r\n                disabled={!enableDeletion}\r\n              >\r\n                Delete a Character / Circle\r\n              </button>\r\n            </li>\r\n            {gameMaster ? (\r\n              <Fragment>\r\n                <li className=\"nav-item\">\r\n                  <button\r\n                    onClick={onShowPlayersLink}\r\n                    className={\r\n                      \"btn btn-primary form-control mt-\" + buttonTopMargin\r\n                    }\r\n                  >\r\n                    Show Link for Players\r\n                  </button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button\r\n                    onClick={onExitToMenu}\r\n                    className={\r\n                      \"btn btn-primary form-control mt-\" + buttonTopMargin\r\n                    }\r\n                  >\r\n                    Exit to Menu\r\n                  </button>\r\n                </li>\r\n              </Fragment>\r\n            ) : null}\r\n          </span>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActionsMenu;\r\n","export const CallLoginAPI = (loginData) => {\r\n  return sendRequest(\"/auth/login/\", \"POST\", loginData);\r\n};\r\n\r\nexport const CallRegisterAPI = (userData) => {\r\n  return sendRequest(\"/auth/register/\", \"POST\", userData);\r\n};\r\n\r\nexport const CallResetPasswordSendAPI = (resetData) => {\r\n  return sendRequest(\"/auth/reset_password/send\", \"POST\", resetData);\r\n};\r\n\r\nexport const CallCheckPasswordTokenMatches = (authToken) => {\r\n  return sendRequest(\"/auth/user/\" + authToken, \"GET\");\r\n};\r\n\r\nexport const CallResetPasswordResetAPI = (resetData) => {\r\n  return sendRequest(\"/auth/reset_password/reset\", \"POST\", resetData);\r\n};\r\n\r\nexport const CallEraseGameDataAPI = (authToken) => {\r\n  return sendRequest(\"/gameData/delete\", \"DELETE\", undefined, authToken);\r\n};\r\n\r\nexport const CallGetGameDataAPI = (authToken) => {\r\n  return sendRequest(\"/gameData\", \"GET\", undefined, authToken);\r\n};\r\n\r\nexport const CallSaveNewGameDataAPI = (gameState, authToken) => {\r\n  return sendRequest(\"/gameData\", \"POST\", gameState, authToken);\r\n};\r\n\r\nexport const CallUpdateGameDataAPI = (gameState, authToken) => {\r\n  return sendRequest(\"/gameData\", \"PATCH\", gameState, authToken);\r\n};\r\n\r\nexport const API_URL_DEV = \"http://localhost:9000\";\r\nexport const API_URL = \"https://dnd-online-board.herokuapp.com\";\r\n\r\nconst createRequest = (method, bodyObject) => {\r\n  return {\r\n    method: method,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(bodyObject),\r\n  };\r\n};\r\n\r\nconst sendRequest = async (\r\n  urlEnd,\r\n  method,\r\n  bodyObject = undefined,\r\n  authToken = null\r\n) => {\r\n  const url = API_URL + urlEnd;\r\n  const req = createRequest(method, bodyObject);\r\n  if (authToken) {\r\n    req.headers[\"auth-token\"] = authToken;\r\n  }\r\n  console.debug(\"sending: \", req, url);\r\n  try {\r\n    const res = await fetch(url, req);\r\n    console.debug(\"result:\", res);\r\n    const data = await res.json();\r\n    console.debug(\"response: \", { status: res.status, body: data });\r\n    return { status: res.status, body: data };\r\n  } catch (err) {\r\n    console.error(\r\n      \"Error with request \" + method + \" to url \" + url,\r\n      \"body:\",\r\n      bodyObject,\r\n      err.message,\r\n      err.stack ? err.stack : null\r\n    );\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./sideBar.css\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport {\r\n  MIN_SPELL_CIRCLE_RADIUS_FEET,\r\n  MAX_SPELL_CIRCLE_RADIUS_FEET,\r\n} from \"../constants\";\r\n\r\nclass CharacterCreator extends Component {\r\n  state = {\r\n    spellName: \"\",\r\n    ownerName: \"\",\r\n    radius: MIN_SPELL_CIRCLE_RADIUS_FEET,\r\n    color: {\r\n      r: \"241\",\r\n      g: \"112\",\r\n      b: \"19\",\r\n      a: \"1\",\r\n    },\r\n    missingFields: false,\r\n    isRadiusValid: true,\r\n  };\r\n\r\n  initiateState() {\r\n    this.setState({\r\n      spellName: \"\",\r\n      ownerName: \"\",\r\n      radius: MIN_SPELL_CIRCLE_RADIUS_FEET,\r\n      color: {\r\n        r: \"241\",\r\n        g: \"112\",\r\n        b: \"19\",\r\n        a: \"1\",\r\n      },\r\n      missingFields: false,\r\n      isRadiusValid: true,\r\n    });\r\n  }\r\n\r\n  onChangeRadius(event) {\r\n    let newRadiusVal = Number(event.target.value.replace(/\\D/, \"\"));\r\n    this.setState({ radius: newRadiusVal });\r\n  }\r\n\r\n  handleCancelCreation = () => {\r\n    this.initiateState();\r\n    this.props.onCancel();\r\n  };\r\n\r\n  handleCreateButtonClick = () => {\r\n    const { spellName, ownerName, radius, color } = { ...this.state };\r\n    this.setState({ isRadiusValid: true, missingFields: false }); // initialize errors\r\n    if (!spellName || !color) {\r\n      this.setState({ missingFields: true });\r\n    } else if (\r\n      MIN_SPELL_CIRCLE_RADIUS_FEET > radius ||\r\n      radius > MAX_SPELL_CIRCLE_RADIUS_FEET\r\n    ) {\r\n      this.setState({ isRadiusValid: false });\r\n    } else {\r\n      // form is valid\r\n      this.initiateState(); // Prepare for next circle creation\r\n      this.props.onCreation({ spellName, ownerName, radius, color });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      spellName,\r\n      ownerName,\r\n      radius,\r\n      color,\r\n      isRadiusValid,\r\n      missingFields,\r\n    } = this.state;\r\n    return (\r\n      <ul className=\"nav nav-tabs flex-column bg-dark row w-100 MenuUl p-20\">\r\n        <h4 className=\"col mb-5\">\r\n          <span className=\"creatorHeader\">Add a Spell Circle</span>\r\n        </h4>\r\n        <span className=\"row\">\r\n          <span className=\"col-8 d-inline\">\r\n            <li className=\"nav-item\">\r\n              <input\r\n                className=\"input-group-sm form-control col\"\r\n                id=\"spellName\"\r\n                value={spellName}\r\n                placeholder=\"Spell name\"\r\n                required\r\n                onChange={(event) =>\r\n                  this.setState({ spellName: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <input\r\n                className=\"input-group-sm form-control col mt-3\"\r\n                id=\"ownerName\"\r\n                value={ownerName}\r\n                placeholder=\"Owner name (optional)\"\r\n                onChange={(event) =>\r\n                  this.setState({ ownerName: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <label className=\"col align-text-bottom mt-3\">\r\n                Radius in feet (a square is 5 feet wide):\r\n              </label>\r\n              <input\r\n                className=\"input-group-sm form-control col\"\r\n                id=\"radius\"\r\n                type=\"number\"\r\n                step={MIN_SPELL_CIRCLE_RADIUS_FEET}\r\n                min={MIN_SPELL_CIRCLE_RADIUS_FEET}\r\n                max={MAX_SPELL_CIRCLE_RADIUS_FEET}\r\n                value={radius}\r\n                required\r\n                onChange={(event) => this.onChangeRadius(event, false)}\r\n              />\r\n            </li>\r\n          </span>\r\n          <li className=\"nav-item col-3 d-inline\">\r\n            <label className=\"mb-2\">Choose color for the circle:</label>\r\n            <SketchPicker\r\n              color={color}\r\n              onChange={(color) => this.setState({ color: color.rgb })}\r\n            />\r\n          </li>\r\n        </span>\r\n        <li className=\"nav-item\">\r\n          <span className=\"row mt-3\">\r\n            <div className=\"mt-3 col-8 d-inline\">\r\n              <button\r\n                onClick={this.handleCreateButtonClick}\r\n                className=\"btn btn-primary form-control\"\r\n              >\r\n                Create!\r\n              </button>\r\n            </div>\r\n            <div className=\"mt-3 col-4 d-inline\">\r\n              <button\r\n                onClick={this.handleCancelCreation}\r\n                className=\"btn btn-danger form-control\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </span>\r\n        </li>\r\n        {missingFields ? (\r\n          <li className=\"nav-item col mt-3\">\r\n            <h4>\r\n              <span className=\"badge badge-danger\">\r\n                Not all fields are filled/selected!\r\n              </span>\r\n            </h4>\r\n          </li>\r\n        ) : null}\r\n        {isRadiusValid ? null : (\r\n          <li className=\"nav-item col mt-3\">\r\n            <h4>\r\n              <span className=\"badge badge-danger\">\r\n                Radius value should be {MIN_SPELL_CIRCLE_RADIUS_FEET}-\r\n                {MAX_SPELL_CIRCLE_RADIUS_FEET}\r\n              </span>\r\n            </h4>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CharacterCreator;\r\n","import React, { Component } from \"react\";\r\nimport SpellCircleCreator from \"./spellCircleCreator\";\r\nimport \"./popUp.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass SpellCircleCreatorPopUp extends Component {\r\n  handleSpellCircleCreationClick = (stateData) => {\r\n    this.props.closePopup();\r\n    this.props.onSpellCircleCreation(stateData);\r\n  };\r\n\r\n  handleCancelCreation = () => {\r\n    this.props.closePopup();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PopUp\">\r\n        <div className=\"SpellCircleCreatorPopUpInner\">\r\n          <SpellCircleCreator\r\n            onCreation={this.handleSpellCircleCreationClick}\r\n            onCancel={this.handleCancelCreation}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellCircleCreatorPopUp;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CallLoginAPI } from \"../apiUtils\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    toGameMenu: false,\r\n  };\r\n\r\n  handleLoginFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const { onLogin } = this.props;\r\n    const promise = CallLoginAPI({ email, password });\r\n\r\n    promise.then((res) => {\r\n      if (!res) return;\r\n      if (res.status !== 200) {\r\n        this.setState({ errorMessage: res.body.error.message });\r\n      } else {\r\n        this.setState({ toGameMenu: true });\r\n        onLogin(res.body.userName, res.body.authToken);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, errorMessage, toGameMenu } = this.state;\r\n\r\n    if (toGameMenu) {\r\n      return <Redirect to=\"/home/game_menu\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"HomeBgContent\">\r\n        <form onSubmit={this.handleLoginFormSubmit}>\r\n          <ul className=\"MenuUl bg-dark w-100\">\r\n            <h4 className=\"mb-4\">\r\n              <span className=\"creatorHeader\">\r\n                Welcome to D&amp;D Online Board\r\n              </span>\r\n            </h4>\r\n            <li className=\"mb-3\">\r\n              <Link to=\"/home/about\">\r\n                <h5>What is D&amp;D Online Board?</h5>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <input\r\n                className=\"input-group-sm form-control\"\r\n                id=\"email\"\r\n                value={email}\r\n                placeholder=\"Email Address\"\r\n                required\r\n                onChange={(event) =>\r\n                  this.setState({ email: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li>\r\n              <input\r\n                className=\"input-group-sm form-control mt-3\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                required\r\n                onChange={(event) =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary form-control mt-3\"\r\n              >\r\n                Log In\r\n              </button>\r\n            </li>\r\n            <li className=\"mt-2\">\r\n              <Link to=\"/home/register\">New user?</Link>\r\n              <Link className=\"float-right\" to=\"/home/forgot_password\">\r\n                Forgot password?\r\n              </Link>\r\n            </li>\r\n            {errorMessage ? (\r\n              <li>\r\n                <h4>\r\n                  <span className=\"badge badge-danger\">{errorMessage}</span>\r\n                </h4>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { CallGetGameDataAPI } from \"../apiUtils\";\r\nimport \"./home.css\";\r\n\r\nlet _gameMenuMounted = false;\r\n\r\nclass GameMenu extends Component {\r\n  state = {\r\n    toLogin: false,\r\n    toMap: false,\r\n    gameDataExists: false,\r\n    continueGameText: \"\",\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.cancelRedirectFromMap(); // We only want to redirect once from map, without unmounting map compponent (this allows back button press)\r\n  }\r\n\r\n  componentDidMount() {\r\n    _gameMenuMounted = true;\r\n    if (this.state && this.props.authToken) {\r\n      this.checkForExistingGameData(this.props.authToken);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    _gameMenuMounted = false;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (_gameMenuMounted) {\r\n      if (this.props.authToken !== nextProps.authToken) {\r\n        this.checkForExistingGameData(nextProps.authToken);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkForExistingGameData(authToken) {\r\n    this.setState({ continueGameText: \"Collecting game data from server...\" });\r\n    const promise = CallGetGameDataAPI(authToken);\r\n    promise.then((res) => {\r\n      if (!res || !_gameMenuMounted) return;\r\n      if (res.status !== 200) {\r\n        this.setState({\r\n          continueGameText: \"No Saved Game\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          gameDataExists: true,\r\n          continueGameText: \"Continue Last Saved Game\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleLogOutClick = () => {\r\n    this.setState({ toLogin: true });\r\n    this.props.onLogOut();\r\n  };\r\n\r\n  handleStartNewGameButtonClick = () => {\r\n    if (this.state.gameDataExists) {\r\n      this.setState({ showWarning: true });\r\n    } else {\r\n      this.beginNewGame();\r\n    }\r\n  };\r\n\r\n  beginNewGame = () => {\r\n    this.setState({ toMap: true });\r\n    this.props.onStartANewGame();\r\n  };\r\n\r\n  handleContinueGameClick = () => {\r\n    this.setState({ toMap: true });\r\n    this.props.onContinueSavedGame();\r\n  };\r\n\r\n  renderGameMenu() {\r\n    const { userName } = this.props;\r\n    const { showWarning, gameDataExists, continueGameText } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <h4 className=\"mb-4\">\r\n          <span className=\"creatorHeader\">Hi, {userName}! Ready to play?</span>\r\n        </h4>\r\n        <li>\r\n          <button\r\n            onClick={this.handleContinueGameClick}\r\n            className=\"btn btn-primary form-control mt-3\"\r\n            disabled={!gameDataExists}\r\n          >\r\n            {continueGameText}\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button\r\n            onClick={this.handleStartNewGameButtonClick}\r\n            className=\"btn btn-primary form-control mt-3\"\r\n          >\r\n            Start a New Game\r\n          </button>\r\n        </li>\r\n        <li className=\"mt-2 mb-4\">\r\n          <a className=\"float-right\" href=\"#\" onClick={this.handleLogOutClick}>\r\n            Log Out\r\n          </a>\r\n        </li>\r\n        {showWarning ? (\r\n          <span>\r\n            <li className=\"mt-2\">\r\n              <h6>\r\n                Starting a new game will erase the last saved game, continue?\r\n              </h6>\r\n            </li>\r\n            <span className=\"inline-form row\">\r\n              <dev className=\"col-7 d-inline p-1\">\r\n                <button\r\n                  onClick={this.beginNewGame}\r\n                  className=\"btn btn-danger form-control mt-3\"\r\n                >\r\n                  Yes - Delete my saved game\r\n                </button>\r\n              </dev>\r\n              <dev className=\"col-5 d-inline p-1\">\r\n                <button\r\n                  onClick={() => this.setState({ showWarning: false })}\r\n                  className=\"btn btn-primary form-control mt-3\"\r\n                >\r\n                  No - Keep my saved game\r\n                </button>\r\n              </dev>\r\n            </span>\r\n          </span>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  renderNotLoggedInError() {\r\n    return (\r\n      <Fragment>\r\n        <h4 className=\"mb-4\">\r\n          <span className=\"creatorHeader\">Hey... unknown user!</span>\r\n          <br></br>\r\n          <br></br>\r\n          Oops! You can't see the game menu if you're not logged in :) <br></br>\r\n          Please log in to play.\r\n        </h4>\r\n        <Link to=\"/home/login\">Login Here</Link>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { authToken, isSmallerScreen } = this.props;\r\n    const { toLogin, toMap } = this.state;\r\n\r\n    if (toLogin) {\r\n      return <Redirect push to=\"/home/login\" />;\r\n    } else if (toMap) {\r\n      return <Redirect push to=\"/map\" />;\r\n    }\r\n\r\n    const menuDesignClass = isSmallerScreen ? \"MenuUlSmallerScreen\" : \"MenuUl\";\r\n\r\n    return (\r\n      <div className=\"GameMenuBgContent\">\r\n        <ul className={\"w-100 \" + menuDesignClass}>\r\n          {authToken ? this.renderGameMenu() : this.renderNotLoggedInError()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameMenu;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CallResetPasswordSendAPI } from \"../apiUtils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ForgotPasswordForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    errMessage: \"\",\r\n    messageUnderBox:\r\n      \"A message with a link to reset your password will be sent to this email address.\",\r\n  };\r\n\r\n  callResetPasswordSendAPI(email) {\r\n    const promise = CallResetPasswordSendAPI({ email: email });\r\n    promise.then((res) => {\r\n      if (!res) return;\r\n      if (res.status !== 200) {\r\n        this.setState({\r\n          errMessage: res.body.error.message,\r\n          messageUnderBox: \"An error has occured\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          emailSent: true,\r\n          messageUnderBox: \"Reset message sent to email address!\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSendButtonClick = () => {\r\n    const { email } = this.state;\r\n    this.setState({ messageUnderBox: \"Please wait...\" });\r\n    this.callResetPasswordSendAPI(email);\r\n  };\r\n\r\n  render() {\r\n    const { email, errMessage, messageUnderBox } = this.state;\r\n    return (\r\n      <div className=\"HomeBgContent\">\r\n        <ul className=\"MenuUl bg-dark w-100\">\r\n          <h4 className=\"mb-5\">\r\n            <span className=\"creatorHeader\">Reset Password</span>\r\n          </h4>\r\n          <li>\r\n            <input\r\n              className=\"input-group-sm form-control\"\r\n              id=\"email\"\r\n              value={email}\r\n              placeholder=\"Email Address\"\r\n              required\r\n              onChange={(event) => this.setState({ email: event.target.value })}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label>{messageUnderBox}</label>\r\n          </li>\r\n          <li>\r\n            <button\r\n              onClick={this.handleSendButtonClick}\r\n              className=\"btn btn-primary form-control mt-3\"\r\n            >\r\n              Send\r\n            </button>\r\n          </li>\r\n          <li className=\"mt-2 mb-4\">\r\n            <Link className=\"float-right\" to=\"/home/login\">\r\n              Back to log in\r\n            </Link>\r\n          </li>\r\n          {errMessage ? (\r\n            <li>\r\n              <h4>\r\n                <span className=\"badge badge-danger\">{errMessage}</span>\r\n              </h4>\r\n            </li>\r\n          ) : null}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CallRegisterAPI } from \"../apiUtils\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    userName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: \"\",\r\n    toLogin: false,\r\n  };\r\n\r\n  handleRegisterFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { userName, email, password } = this.state;\r\n    const { onRegistered } = this.props;\r\n    const promise = CallRegisterAPI({ userName, email, password });\r\n\r\n    promise.then((res) => {\r\n      if (!res) return;\r\n      if (res.status !== 200) {\r\n        this.setState({ errorMessage: res.body.error.message });\r\n      } else {\r\n        this.setState({ toLogin: true });\r\n        onRegistered();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { userName, email, password, errorMessage, toLogin } = this.state;\r\n\r\n    if (toLogin) {\r\n      return <Redirect push to=\"/home/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"HomeBgContent\">\r\n        <form onSubmit={this.handleRegisterFormSubmit}>\r\n          <ul className=\"MenuUl bg-dark w-100\">\r\n            <h4 className=\"mb-5\">\r\n              <span className=\"creatorHeader\">New User Registration</span>\r\n            </h4>\r\n            <li>\r\n              <input\r\n                className=\"input-group-sm form-control\"\r\n                id=\"userName\"\r\n                value={userName}\r\n                placeholder=\"User Name\"\r\n                required\r\n                onChange={(event) =>\r\n                  this.setState({ userName: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li>\r\n              <input\r\n                className=\"input-group-sm form-control mt-3\"\r\n                id=\"email\"\r\n                value={email}\r\n                placeholder=\"Email Address\"\r\n                required\r\n                onChange={(event) =>\r\n                  this.setState({ email: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li>\r\n              <input\r\n                className=\"input-group-sm form-control mt-3\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                required\r\n                onChange={(event) =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n              />\r\n            </li>\r\n            <li>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary form-control mt-3\"\r\n              >\r\n                Register\r\n              </button>\r\n            </li>\r\n            <li className=\"mt-2 mb-4\">\r\n              <Link className=\"float-right\" to=\"/home/login\">\r\n                Already registered? log in\r\n              </Link>\r\n            </li>\r\n            {errorMessage ? (\r\n              <li>\r\n                <h4>\r\n                  <span className=\"badge badge-danger\">{errorMessage}</span>\r\n                </h4>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GAMEPLAY_IMG_PATH } from \"../constants\";\r\n\r\nclass AboutPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"AboutScreenContent\">\r\n        <ul className=\"MenuUl bg-dark w-100\">\r\n          <h4 className=\"mb-5\">\r\n            <span className=\"creatorHeader\">What is D&amp;D Online Board?</span>\r\n          </h4>\r\n          <p>\r\n            <h4>What is D&amp;D?</h4>\r\n            <label>\r\n              D&amp;D stands for Dungeons &amp; Dragons. It's a fantasy tabletop\r\n              role-playing game (RPG) in which every participant plays a\r\n              character. Characters can do anything a real life person can do\r\n              and more - they can talk, walk, jump, fight each other or fight\r\n              monsters, etc. It's all done by explicitly saying what the\r\n              character does. One of the participants plays a \"game master\" and\r\n              decides, according to traditional methods, which actions succeed\r\n              and which fail.\r\n            </label>\r\n          </p>\r\n          <p>\r\n            <h4>What is a D&amp;D Board?</h4>\r\n            <label>\r\n              When a fight happens, there's a strict system that determines\r\n              which character goes first, how far it can walk in one turn, and\r\n              if the actions succeed. This is done with the help of a map board\r\n              in which every square is 5 feet long, and different types of dice\r\n              to determine which attacks succeed and how much damage is done.\r\n              Usually the map is a physical board with character miniatures as\r\n              pawns, and the participants meet together to play.\r\n            </label>\r\n          </p>\r\n          <div className=\"row\">\r\n            <p className=\"col-6\">\r\n              <h4>What can I do in D&amp;D Online Board?</h4>\r\n              <label>\r\n                Instead of driving and physically meeting, you can play online\r\n                with your friends. Just connect to an online conversation app,\r\n                and use our online board site to view the same world and take\r\n                character actions.\r\n              </label>\r\n              <ul className=\"pl-3 mt-2\">\r\n                <h5 className=\"font-weight-bold\">The game includes:</h5>\r\n                <li>Simultaneous gameplay for multiple players/computers.</li>\r\n                <li>\r\n                  Chacacters and monsters that can be placed and move on the\r\n                  board.\r\n                </li>\r\n                <li>\r\n                  Spell effect circular areas that can be placed and move on the\r\n                  board.\r\n                </li>\r\n                <li>\r\n                  All dice types virtual roll available on the side-bar during\r\n                  the game.\r\n                </li>\r\n                <li>\r\n                  Your progress is automatically saved, you can continue to play\r\n                  another time.\r\n                </li>\r\n                <br></br>\r\n                <Link to=\"/home/register\">\r\n                  <h4>This sounds so cool! I want to play!</h4>\r\n                </Link>\r\n              </ul>\r\n            </p>\r\n            <div className=\"col-6\">\r\n              <img\r\n                src={GAMEPLAY_IMG_PATH}\r\n                alt=\"gameplay\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"auto\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport LoginForm from \"./loginForm\";\r\nimport GameMenu from \"./gameMenu\";\r\nimport ForgotPasswordForm from \"./forgotPasswordForm\";\r\nimport RegistrationForm from \"./registrationForm\";\r\nimport AboutPage from \"./aboutPage\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nclass WelcomeScreen extends Component {\r\n  render() {\r\n    const {\r\n      onNewGame,\r\n      onContinueSavedGame,\r\n      authToken,\r\n      userName,\r\n      onRegisteredNewUser,\r\n      onLogOut,\r\n      cancelRedirectFromMap,\r\n      onLogIn,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"HomeBg\">\r\n        <Switch>\r\n          <Redirect\r\n            exact\r\n            from=\"/home\"\r\n            to={authToken ? \"/home/game_menu\" : \"/home/login\"}\r\n          />\r\n          <Route path=\"/home/game_menu\">\r\n            <GameMenu\r\n              onContinueSavedGame={onContinueSavedGame}\r\n              onStartANewGame={onNewGame}\r\n              onLogOut={onLogOut}\r\n              userName={userName}\r\n              authToken={authToken}\r\n              cancelRedirectFromMap={cancelRedirectFromMap}\r\n              isSmallerScreen={this.props.isSmallerScreen}\r\n            />\r\n          </Route>\r\n          <Route path=\"/home/forgot_password\">\r\n            <ForgotPasswordForm />\r\n          </Route>\r\n          <Route path=\"/home/about\">\r\n            <AboutPage />\r\n          </Route>\r\n          <Route path=\"/home/register\">\r\n            <RegistrationForm onRegistered={onRegisteredNewUser} />\r\n          </Route>\r\n          <Route path=\"/home/login\">\r\n            <LoginForm onLogin={onLogIn} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WelcomeScreen;\r\n","import React, { Component } from \"react\";\r\nimport \"./popUp.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass TempMessage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"PopUp\">\r\n        <div className=\"TempMessageInner\">\r\n          <div className=\"text-white\" style={{ textAlignLast: \"center\" }}>\r\n            <h2>{this.props.message}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TempMessage;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  CallResetPasswordResetAPI,\r\n  CallCheckPasswordTokenMatches,\r\n} from \"../apiUtils\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./home.css\";\r\n\r\nclass ResetPasswordForm extends Component {\r\n  state = {\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    errorMessage: \"\",\r\n    authToken: null,\r\n    tokenValid: false,\r\n    isLoading: true,\r\n    toLogin: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.authToken = this.getAuthTokenFromParams();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.authToken) {\r\n      this.isTokenMatchesUSer();\r\n    }\r\n  }\r\n\r\n  getAuthTokenFromParams() {\r\n    const hrefParts = window.location.href.split(\"/\");\r\n    const authToken = hrefParts[hrefParts.length - 1];\r\n    return authToken;\r\n  }\r\n\r\n  isTokenMatchesUSer() {\r\n    const promise = CallCheckPasswordTokenMatches(this.state.authToken);\r\n    promise.then((res) => {\r\n      if (!res) return;\r\n      if (res.status !== 200) {\r\n        this.setState({\r\n          errorMessage: res.body.error.message,\r\n          isLoading: false,\r\n        });\r\n      } else {\r\n        this.setState({ tokenValid: true, isLoading: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChangePasswordFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { newPassword, confirmPassword, authToken } = this.state;\r\n    const { onPasswordReset } = this.props;\r\n\r\n    if (!newPassword || !confirmPassword) {\r\n      this.setState({ errorMessage: \"Please fill both of the above fields\" });\r\n      return;\r\n    }\r\n    if (newPassword !== confirmPassword) {\r\n      this.setState({ errorMessage: \"Passwords must match\" });\r\n      return;\r\n    }\r\n\r\n    const promise = CallResetPasswordResetAPI({\r\n      newPassword,\r\n      authToken,\r\n    });\r\n\r\n    promise.then((res) => {\r\n      if (!res) return;\r\n      if (res.status !== 200) {\r\n        this.setState({ errorMessage: res.body.error.message });\r\n      } else {\r\n        this.setState({ toLogin: true });\r\n        onPasswordReset();\r\n      }\r\n    });\r\n  };\r\n\r\n  renderLoadingPage() {\r\n    return (\r\n      <ul className=\"MenuUl bg-dark w-100 h-100 row\">\r\n        <h4 className=\"mb-5\">\r\n          <span className=\"creatorHeader\">Page loading...</span>\r\n        </h4>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  renderAccessDeniedPage() {\r\n    return (\r\n      <ul className=\"MenuUl bg-dark w-100 h-100 row\">\r\n        <li className=\"md-5\">\r\n          <h3 className=\"mb-5\">\r\n            <span className=\"creatorHeader\">Access denied</span>\r\n          </h3>\r\n          <h5>\r\n            If you're trying to reset your password, this link may be an old\r\n            password reset link.<br></br> Please look for the latest one in your\r\n            inbox/spam folder or request a new one.\r\n          </h5>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  renderPasswordResetPage() {\r\n    const { newPassword, confirmPassword, errorMessage, toLogin } = this.state;\r\n\r\n    if (toLogin) {\r\n      return <Redirect push to=\"/home/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"HomeBg\">\r\n        <div className=\"HomeBgContent\">\r\n          <form onSubmit={this.handleChangePasswordFormSubmit}>\r\n            <ul className=\"MenuUl bg-dark w-100\">\r\n              <h4 className=\"mb-5\">\r\n                <span className=\"creatorHeader\">D&amp;D Online Board</span>\r\n              </h4>\r\n              <h4>Reset Password</h4>\r\n              <li>\r\n                <input\r\n                  className=\"input-group-sm form-control mt-3\"\r\n                  type=\"password\"\r\n                  id=\"newPassword\"\r\n                  value={newPassword}\r\n                  placeholder=\"New Password\"\r\n                  required\r\n                  onChange={(event) =>\r\n                    this.setState({ newPassword: event.target.value })\r\n                  }\r\n                />\r\n              </li>\r\n              <li>\r\n                <input\r\n                  className=\"input-group-sm form-control mt-3\"\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  placeholder=\"Confirm Password\"\r\n                  required\r\n                  onChange={(event) =>\r\n                    this.setState({ confirmPassword: event.target.value })\r\n                  }\r\n                />\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary form-control mt-3\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </li>\r\n              {errorMessage ? (\r\n                <li className=\"nav-item col mt-4\">\r\n                  <h4>\r\n                    <span className=\"badge badge-danger\">{errorMessage}</span>\r\n                  </h4>\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { tokenValid, isLoading } = this.state;\r\n    if (isLoading) {\r\n      return this.renderLoadingPage();\r\n    } else if (tokenValid) {\r\n      return this.renderPasswordResetPage();\r\n    } else {\r\n      return this.renderAccessDeniedPage();\r\n    }\r\n  }\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n","import React, { Component } from \"react\";\r\nimport \"./popUp.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass ExitWarningPopUp extends Component {\r\n  handleExitToMenu = (stateData) => {\r\n    this.props.closePopup();\r\n    this.props.onExitToMenu();\r\n  };\r\n\r\n  handleCancelExit = () => {\r\n    this.props.closePopup();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PopUp\">\r\n        <div className=\"ExitWarningPopUpInner\">\r\n          <div className=\"nav nav-tabs flex-column row w-100 MenuUl\">\r\n            <h4>Your progress is saved. Exit to menu?</h4>\r\n            <span className=\"row mt-3\">\r\n              <div className=\"col-7 d-inline\">\r\n                <button\r\n                  onClick={this.handleExitToMenu}\r\n                  className=\"btn btn-primary form-control\"\r\n                >\r\n                  Yes - Exit to Menu\r\n                </button>\r\n              </div>\r\n              <div className=\"col-5 d-inline\">\r\n                <button\r\n                  onClick={this.handleCancelExit}\r\n                  className=\"btn btn-danger form-control\"\r\n                >\r\n                  No - Back to Game\r\n                </button>\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExitWarningPopUp;\r\n","import React, { Component } from \"react\";\r\nimport \"./popUp.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nclass PlayersLinkPopUp extends Component {\r\n  handleCopyToClipboardClick = (stateData) => {\r\n    copy(this.props.gameLink);\r\n    this.props.closePopup();\r\n    this.props.onCopyToClipboard();\r\n  };\r\n\r\n  copyLinkToClipboard() {\r\n    console.log(\"copyLinkToClipboard called\");\r\n    const element = this.textArea;\r\n    element.select();\r\n    document.execCommand(\"copy\");\r\n  }\r\n\r\n  handleCloseClick = () => {\r\n    this.props.closePopup();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PopUp\">\r\n        <div className=\"ExitWarningPopUpInner\">\r\n          <ul className=\"nav nav-tabs flex-column bg-dark row w-100 p-20 MenuUl\">\r\n            <li>\r\n              <h4 className=\"mb-3\">Game link for players:</h4>\r\n              <textarea rows={3} disabled className=\"form-control\">\r\n                {this.props.gameLink}\r\n              </textarea>\r\n            </li>\r\n            <li className=\"row\">\r\n              <div className=\"col-8 d-inline\">\r\n                <button\r\n                  className=\"btn btn-primary form-control mt-3\"\r\n                  onClick={this.handleCopyToClipboardClick}\r\n                >\r\n                  Copy To Clipboard\r\n                </button>\r\n              </div>\r\n              <div className=\"col-4 d-inline\">\r\n                <button\r\n                  className=\"btn btn-danger form-control mt-3\"\r\n                  onClick={this.handleCloseClick}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayersLinkPopUp;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport DiceRoller from \"./diceRoller\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport MapCanvas from \"./mapCanvas\";\r\nimport CharacterCreatorPopUp from \"./characterCreatorPopUp\";\r\nimport ActionsMenu from \"./actionsMenu\";\r\nimport CloneDeep from \"lodash/cloneDeep\";\r\nimport ErrorBoundary from \"react-error-boundary\";\r\nimport { DefaultFallbackComponent } from \"../constants\";\r\nimport {\r\n  CallGetGameDataAPI,\r\n  CallSaveNewGameDataAPI,\r\n  CallUpdateGameDataAPI,\r\n  CallEraseGameDataAPI,\r\n} from \"../apiUtils\";\r\nimport SpellCircleCreatorPopUp from \"./spellCircleCreatorPopUp\";\r\nimport WelcomeScreen from \"./welcomeScreen\";\r\nimport TempMessage from \"./tempMessage\";\r\nimport ResetPasswordForm from \"./resetPasswordForm\";\r\nimport ExitWarningPopUp from \"./exitWarningPopUp\";\r\nimport { Persist } from \"react-persist\";\r\nimport { Route, Redirect, Switch, Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport PlayersLinkPopUp from \"./playersLinkPopUp\";\r\nimport { PLAYERS_GAME_URL } from \"../constants\";\r\nimport withSizes from \"react-sizes\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    authToken: null,\r\n    userName: \"\",\r\n    rowCount: this.props.rowCount,\r\n    colCount: this.props.colCount,\r\n    walls: [\r\n      // { row: 1, col: 1 },\r\n      // { row: 1, col: 2 }\r\n    ],\r\n    cellSize: this.props.cellSize,\r\n    borderWidth: Math.ceil(this.props.cellSize * 0.02),\r\n    matrix: null,\r\n    selectedChar: null,\r\n    placingChar: null,\r\n    selectedCircle: null,\r\n    placingCircle: null,\r\n    itemDeletionModeOn: false,\r\n    showTempMessage: false,\r\n    tempMessageText: \"\",\r\n    mapImage: {\r\n      url: this.props.bgImageLink,\r\n      file: null,\r\n    },\r\n    resetPasswordScreen: false,\r\n    spellCircles: [],\r\n    characters: [],\r\n    showCharacterCreatorPopup: false,\r\n    showSpellCircleCreatorPopup: false,\r\n    showExitWarningPopUp: false,\r\n    showGameMenu: true,\r\n    toGameMenu: false,\r\n    updating: false,\r\n    showPlayerLinkPopUp: false,\r\n    gameMaster: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.matrix = this.createMatrix(\r\n      this.props.rowCount,\r\n      this.props.colCount\r\n    );\r\n    if (window.location.href.split(\"/\").includes(\"reset\")) {\r\n      localStorage.removeItem(\"dnd-app\");\r\n      this.state.resetPasswordScreen = true;\r\n    }\r\n  }\r\n\r\n  initiateGame() {\r\n    this.setState({ walls: [], spellCircles: [], characters: [] });\r\n  }\r\n\r\n  setStateFromSavedGameData(savedGameData) {\r\n    const matrix = this.createMatrix(\r\n      savedGameData.rowCount,\r\n      savedGameData.colCount\r\n    );\r\n    const borderWidth = Math.ceil(savedGameData.cellSize * 0.02);\r\n    this.setState({\r\n      ...savedGameData,\r\n      matrix,\r\n      borderWidth,\r\n    });\r\n  }\r\n\r\n  createMatrix(rowCount, colCount) {\r\n    let myarr = [];\r\n    for (let i = 0; i < rowCount; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < colCount; j++) {\r\n        let cell = {\r\n          row: i,\r\n          col: j,\r\n          wall: this.isCellWall(i, j),\r\n        };\r\n        row.push(cell);\r\n      }\r\n      myarr.push(row);\r\n    }\r\n    return myarr;\r\n  }\r\n\r\n  isCellWall(row, col) {\r\n    const walls = this.state.walls.filter(\r\n      (c) => c.row === row && c.col === col\r\n    );\r\n    return walls.length > 0;\r\n  }\r\n\r\n  handleCellClick = (cell, triggerDeselect = true) => {\r\n    const { selectedChar, selectedCircle } = {\r\n      ...this.state,\r\n    };\r\n    if (selectedCircle) {\r\n      let spellCircles = [...this.state.spellCircles];\r\n      const spellCircleInd = this.moveSpellCircle(cell);\r\n      this.handleSaveGame();\r\n      if (triggerDeselect) {\r\n        spellCircles = this.getSpellCirclesArrWithoutSelection();\r\n        this.setState({\r\n          selectedCircle: null,\r\n          placingCircle: null,\r\n          spellCircles,\r\n        });\r\n      } else if (spellCircleInd > -1) {\r\n        this.setState({ selectedCircle: spellCircles[spellCircleInd] });\r\n      }\r\n    }\r\n\r\n    if (selectedChar) {\r\n      let characters = [...this.state.characters];\r\n      if (cell.wall) {\r\n        if (triggerDeselect) {\r\n          characters = this.getCharsArrWithoutSelection();\r\n          this.setState({ selectedChar: null, placingChar: null, characters });\r\n        }\r\n        return;\r\n      }\r\n\r\n      const charInd = this.moveCharacter(cell);\r\n      this.handleSaveGame();\r\n      if (triggerDeselect) {\r\n        characters = this.getCharsArrWithoutSelection();\r\n        this.setState({ selectedChar: null, placingChar: null, characters });\r\n      } else if (charInd > -1) {\r\n        this.setState({ selectedChar: characters[charInd] });\r\n      }\r\n    }\r\n  };\r\n\r\n  // handleKeyUp = e => {\r\n  //   let { selectedChar, matrix } = this.state;\r\n  //   if (!selectedChar) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   let rowAdd = 0;\r\n  //   let colAdd = 0;\r\n\r\n  //   switch (e.keyCode) {\r\n  //     case 37: // Left\r\n  //       rowAdd = 0;\r\n  //       colAdd = -1;\r\n  //       break;\r\n  //     case 38: // Up\r\n  //       rowAdd = -1;\r\n  //       colAdd = 0;\r\n  //       break;\r\n  //     case 39: // Right\r\n  //       rowAdd = 0;\r\n  //       colAdd = 1;\r\n  //       break;\r\n  //     case 40: // Down\r\n  //       rowAdd = 1;\r\n  //       colAdd = 0;\r\n  //       break;\r\n  //     default:\r\n  //       const characters = this.getCharsArrWithoutSelection();\r\n  //       this.setState({ selectedChar: null, placingChar: null, characters });\r\n  //       return;\r\n  //   }\r\n  //   const row = selectedChar.topLeftRow + rowAdd;\r\n  //   const col = selectedChar.topLeftCol + colAdd;\r\n  //   if (this.checkIndicesValid(row, col, row, col)) {\r\n  //     this.handleCellClick(matrix[row][col], false);\r\n  //   }\r\n  // };\r\n\r\n  handleKeyUp = (e) => {\r\n    let { selectedChar, selectedCircle } = { ...this.state };\r\n    if (selectedChar) {\r\n      const characters = this.getCharsArrWithoutSelection();\r\n      this.setState({ selectedChar: null, placingChar: null, characters });\r\n    } else if (selectedCircle) {\r\n      const spellCircles = this.getSpellCirclesArrWithoutSelection();\r\n      this.setState({\r\n        selectedCircle: null,\r\n        placingCircle: null,\r\n        spellCircles,\r\n      });\r\n    }\r\n  };\r\n\r\n  getCharsArrWithoutSelection() {\r\n    let charactersCopy = [...this.state.characters];\r\n    if (charactersCopy[charactersCopy.length - 1].topLeftRow === null) {\r\n      // This happens when canceling the creation of a new character\r\n      charactersCopy.pop();\r\n    }\r\n    return charactersCopy;\r\n  }\r\n\r\n  getSpellCirclesArrWithoutSelection() {\r\n    let spellCirclesCopy = [...this.state.spellCircles];\r\n    if (spellCirclesCopy[spellCirclesCopy.length - 1].row === null) {\r\n      // This happens when canceling the creation of a new character\r\n      spellCirclesCopy.pop();\r\n    }\r\n    return spellCirclesCopy;\r\n  }\r\n\r\n  deleteCharacter(charToDelete) {\r\n    let characters = [...this.state.characters];\r\n    characters = characters.filter((char) => char !== charToDelete);\r\n    this.setState({ characters }, () => {\r\n      this.handleSaveGame();\r\n      if (characters.length === 0 && this.state.spellCircles.length === 0) {\r\n        this.toggleItemDeletionMode();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCharClick = (char) => {\r\n    let { selectedChar, placingChar, itemDeletionModeOn } = {\r\n      ...this.state,\r\n    };\r\n    if (itemDeletionModeOn) {\r\n      this.deleteCharacter(char);\r\n    } else {\r\n      selectedChar = char;\r\n      placingChar = { ...char }; // A copy of the character for the movement\r\n      this.setState({ selectedChar, placingChar });\r\n    }\r\n  };\r\n\r\n  handleSpellCircleClick = (spellCircle) => {\r\n    let { selectedCircle, placingCircle, itemDeletionModeOn } = {\r\n      ...this.state,\r\n    };\r\n    if (itemDeletionModeOn) {\r\n      this.deleteSpellCircle(spellCircle);\r\n    } else {\r\n      selectedCircle = spellCircle;\r\n      placingCircle = { ...spellCircle }; // A copy of the spellCircle for the movement\r\n      this.setState({ selectedCircle, placingCircle });\r\n    }\r\n  };\r\n\r\n  deleteSpellCircle(spellCircleToDelete) {\r\n    let spellCircles = [...this.state.spellCircles];\r\n    spellCircles = spellCircles.filter(\r\n      (spellCircle) => spellCircle !== spellCircleToDelete\r\n    );\r\n    this.setState({ spellCircles }, () => {\r\n      this.handleSaveGame();\r\n      if (this.state.characters.length === 0 && spellCircles.length === 0) {\r\n        this.toggleItemDeletionMode();\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedCharCells(char) {\r\n    let selectedCells = [];\r\n    const { matrix } = this.state;\r\n    const lastRowInd = char.heightCells + char.topLeftRow - 1;\r\n    const lastColInd = char.widthCells + char.topLeftCol - 1;\r\n    if (\r\n      !this.checkIndicesValid(\r\n        char.topLeftRow,\r\n        char.topLeftCol,\r\n        lastRowInd,\r\n        lastColInd\r\n      )\r\n    ) {\r\n      console.warn(\"Can't place character outside map boundary!\");\r\n      return [];\r\n    }\r\n    for (let row = char.topLeftRow; row < lastRowInd + 1; row++) {\r\n      for (let col = char.topLeftCol; col < lastColInd + 1; col++) {\r\n        selectedCells.push(matrix[row][col]);\r\n      }\r\n    }\r\n    return selectedCells;\r\n  }\r\n\r\n  checkIndicesValid(smallRow, smallCol, largeRow, largeCol) {\r\n    const { rowCount, colCount } = this.props;\r\n    return (\r\n      smallRow >= 0 &&\r\n      smallCol >= 0 &&\r\n      largeRow < rowCount &&\r\n      largeCol < colCount\r\n    );\r\n  }\r\n\r\n  moveCharacter(cell) {\r\n    const { characters, selectedChar } = { ...this.state };\r\n    const charInd = characters.indexOf(selectedChar);\r\n    const { row, col } = cell;\r\n    if (!this.isNewCharPosValid({ row, col })) {\r\n      return -1;\r\n    }\r\n\r\n    characters[charInd] = { ...this.state.selectedChar };\r\n    characters[charInd].topLeftRow = row;\r\n    characters[charInd].topLeftCol = col;\r\n    this.setState({ characters });\r\n    return charInd;\r\n  }\r\n\r\n  moveSpellCircle(cell) {\r\n    const { spellCircles, selectedCircle } = { ...this.state };\r\n    const circleInd = spellCircles.indexOf(selectedCircle);\r\n    const { row, col } = cell;\r\n\r\n    spellCircles[circleInd] = { ...this.state.selectedCircle };\r\n    spellCircles[circleInd].row = row;\r\n    spellCircles[circleInd].col = col;\r\n    this.setState({ spellCircles });\r\n    return circleInd;\r\n  }\r\n\r\n  isNewCharPosValid(newPositionInd) {\r\n    let selectedCharCopy = CloneDeep(this.state.selectedChar);\r\n    selectedCharCopy.topLeftRow = newPositionInd.row;\r\n    selectedCharCopy.topLeftCol = newPositionInd.col;\r\n    return this.getSelectedCharCells(selectedCharCopy).length > 0;\r\n  }\r\n\r\n  calcCharPosition = (char) => {\r\n    const { cellSize } = this.props;\r\n    const { borderWidth } = this.state;\r\n    let xPixels = null;\r\n    let yPixels = null;\r\n    if (char.topLeftRow !== null && char.topLeftCol !== null) {\r\n      xPixels = char.topLeftRow * cellSize + borderWidth;\r\n      yPixels = char.topLeftCol * cellSize + borderWidth;\r\n    }\r\n\r\n    return {\r\n      topLeft: {\r\n        row: xPixels,\r\n        col: yPixels,\r\n      },\r\n      width: char.widthCells * cellSize - 2 * borderWidth,\r\n      height: char.heightCells * cellSize - 2 * borderWidth,\r\n    };\r\n  };\r\n\r\n  calcSpellCirclePosition = (spellCircle) => {\r\n    const { cellSize } = this.props;\r\n    let xPixels = null;\r\n    let yPixels = null;\r\n    if (spellCircle.row !== null && spellCircle.col !== null) {\r\n      xPixels =\r\n        spellCircle.row * cellSize - (spellCircle.radius / 5 - 0.5) * cellSize;\r\n      yPixels =\r\n        spellCircle.col * cellSize - (spellCircle.radius / 5 - 0.5) * cellSize;\r\n    }\r\n\r\n    return {\r\n      row: xPixels,\r\n      col: yPixels,\r\n      radius: spellCircle.radius * (cellSize / 5),\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp, false);\r\n    if (localStorage.getItem(\"dnd-app\")) {\r\n    }\r\n    if (\r\n      !this.state.authToken &&\r\n      window.location.href.split(\"/\").includes(\"game\")\r\n    ) {\r\n      // player mode (/game route)\r\n      this.setState({ gameMaster: false });\r\n      const authToken = this.getAuthTokenFromParams();\r\n      if (authToken) {\r\n        this.setState({ authToken });\r\n      }\r\n    }\r\n    this.updateMapIntervalID = setInterval(() => {\r\n      const { authToken, selectedChar, selectedCircle } = this.state;\r\n      if (authToken && !selectedChar && !selectedCircle) {\r\n        this.handleContinueSavedGame();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.handleKeyUp, false);\r\n    if (this.updateMapIntervalID) clearInterval(this.updateMapIntervalID);\r\n  }\r\n\r\n  handleMouseEnterCell = (cell) => {\r\n    let { placingChar, placingCircle } = { ...this.state };\r\n    if (placingChar) {\r\n      placingChar.topLeftRow = cell.row;\r\n      placingChar.topLeftCol = cell.col;\r\n      this.setState({ placingChar });\r\n    } else if (placingCircle) {\r\n      placingCircle.row = cell.row;\r\n      placingCircle.col = cell.col;\r\n      this.setState({ placingCircle });\r\n    }\r\n  };\r\n\r\n  handleCharacterCreation = (stateData) => {\r\n    const { characterName, height, width, avatarImage } = stateData;\r\n    let newChar = {\r\n      name: characterName,\r\n      image: { url: avatarImage, file: null },\r\n      topLeftRow: null,\r\n      topLeftCol: null,\r\n      heightCells: height,\r\n      widthCells: width,\r\n    };\r\n    const characters = [...this.state.characters];\r\n    characters.push(newChar);\r\n    this.setState({\r\n      characters,\r\n      placingChar: { ...newChar },\r\n      selectedChar: newChar,\r\n    });\r\n  };\r\n\r\n  toggleCharacterCreatorPopup = () => {\r\n    this.setState({\r\n      showCharacterCreatorPopup: !this.state.showCharacterCreatorPopup,\r\n    });\r\n  };\r\n\r\n  handleSpellCircleCreation = (stateData) => {\r\n    const { spellName, ownerName, radius, color } = stateData;\r\n    const newCircle = {\r\n      name: spellName,\r\n      owner: ownerName,\r\n      radius,\r\n      row: null,\r\n      col: null,\r\n      color,\r\n    };\r\n    const spellCircles = [...this.state.spellCircles];\r\n    spellCircles.push(newCircle);\r\n    this.setState({\r\n      spellCircles,\r\n      placingCircle: { ...newCircle },\r\n      selectedCircle: newCircle,\r\n    });\r\n  };\r\n\r\n  toggleItemDeletionMode = () => {\r\n    const { itemDeletionModeOn, selectedChar } = this.state;\r\n    if (selectedChar) {\r\n      this.setState({\r\n        selectedChar: null,\r\n        placingChar: null,\r\n        characters: this.getCharsArrWithoutSelection(),\r\n      }); // Cancel character selection\r\n    }\r\n    this.setState({ itemDeletionModeOn: !itemDeletionModeOn });\r\n  };\r\n\r\n  toggleSpellCircleCreatorPopup = () => {\r\n    this.setState({\r\n      showSpellCircleCreatorPopup: !this.state.showSpellCircleCreatorPopup,\r\n    });\r\n  };\r\n\r\n  togglePlayersLinkPopUp = () => {\r\n    this.setState({ showPlayerLinkPopUp: !this.state.showPlayerLinkPopUp });\r\n  };\r\n\r\n  toggleExitWarningPopUp = () => {\r\n    const { showExitWarningPopUp } = { ...this.state };\r\n    this.setState({ showExitWarningPopUp: !showExitWarningPopUp });\r\n  };\r\n\r\n  handleSaveGame = () => {\r\n    const {\r\n      authToken,\r\n      rowCount,\r\n      colCount,\r\n      walls,\r\n      cellSize,\r\n      spellCircles,\r\n      characters,\r\n      mapImage,\r\n    } = this.state;\r\n    const gameStateToSave = {\r\n      rowCount,\r\n      colCount,\r\n      walls,\r\n      cellSize,\r\n      spellCircles,\r\n      characters,\r\n      mapImage,\r\n    };\r\n    this.createOrUpdateGameState({ gameState: gameStateToSave }, authToken);\r\n  };\r\n\r\n  createOrUpdateGameState(body_object, authToken) {\r\n    this.setState({ updating: true });\r\n    const promiseGet = CallGetGameDataAPI(authToken);\r\n    promiseGet.then((resGet) => {\r\n      if (!resGet) return;\r\n      const apiCall =\r\n        resGet.status !== 200 ? CallSaveNewGameDataAPI : CallUpdateGameDataAPI;\r\n      const promisePost = apiCall(body_object, authToken);\r\n      promisePost.then((resPost) => {\r\n        if (!resPost) return;\r\n        this.setState({ updating: false });\r\n        if (resPost.status !== 200) {\r\n          console.error(resPost.body.error.message);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  showTempMessage(messageText, timeoutMs) {\r\n    this.setState({ tempMessageText: messageText }, () => {\r\n      this.setState({ showTempMessage: true }, () => {\r\n        setTimeout(\r\n          () => this.setState({ showTempMessage: false, tempMessageText: \"\" }),\r\n          timeoutMs\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  handleRegisteredNewUser = () => {\r\n    this.showTempMessage(\"User registered successfully!\", 1500);\r\n  };\r\n\r\n  handleStartNewGame = () => {\r\n    this.setState({\r\n      showGameMenu: false,\r\n      toGameMenu: false,\r\n      gameMaster: true,\r\n      updating: true,\r\n    });\r\n    const erasePromise = CallEraseGameDataAPI(this.state.authToken);\r\n    erasePromise.then((eraseRes) => {\r\n      if (!eraseRes) return;\r\n      this.setState({ updating: false });\r\n      if (\r\n        eraseRes.status === 200 ||\r\n        eraseRes.body.error.message == \"Couldn't find game data to delete\"\r\n      ) {\r\n        this.initiateGame();\r\n        this.handleSaveGame();\r\n      } else {\r\n        console.debug(eraseRes.body.error.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleContinueSavedGame = () => {\r\n    this.setState({ showGameMenu: false, toGameMenu: false });\r\n    const promise = CallGetGameDataAPI(this.state.authToken);\r\n    promise.then((res) => {\r\n      if (!res) return;\r\n      if (\r\n        res.status !== 200 &&\r\n        res.body.error != \"Couldn't find game data to retrieve\"\r\n      ) {\r\n        console.debug(res.body.error.message);\r\n      } else {\r\n        if (\r\n          !this.state.selectedChar &&\r\n          !this.state.selectedCircle &&\r\n          !this.state.updating\r\n        )\r\n          this.setStateFromSavedGameData(res.body.gameState);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleEnterSavedGameAsMaster = () => {\r\n    this.setState({ gameMaster: true });\r\n    this.handleContinueSavedGame();\r\n  };\r\n\r\n  handlePasswordResetComplete = () => {\r\n    this.showTempMessage(\"Password changed successfully!\", 2000);\r\n  };\r\n\r\n  handleExitToMenu = () => {\r\n    this.setState({ toGameMenu: true });\r\n  };\r\n\r\n  handleLogIn = (userName, authToken) => {\r\n    this.setState({ authToken, userName });\r\n  };\r\n\r\n  cancelRedirectFromMap = () => {\r\n    this.setState({ toGameMenu: false });\r\n  };\r\n\r\n  getAuthTokenFromParams() {\r\n    const hrefParts = window.location.href.split(\"/\");\r\n    const authToken = hrefParts[hrefParts.length - 1];\r\n    return authToken;\r\n  }\r\n\r\n  renderWelcomeScreen() {\r\n    return (\r\n      <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n        <WelcomeScreen\r\n          onNewGame={this.handleStartNewGame}\r\n          onContinueSavedGame={this.handleEnterSavedGameAsMaster}\r\n          onRegisteredNewUser={this.handleRegisteredNewUser}\r\n          authToken={this.state.authToken}\r\n          userName={this.state.userName}\r\n          onLogOut={() => this.setState({ authToken: null, userName: \"\" })}\r\n          onLogIn={this.handleLogIn}\r\n          cancelRedirectFromMap={this.cancelRedirectFromMap}\r\n          isSmallerScreen={this.props.isSmallerScreen}\r\n        />\r\n        {this.state.showTempMessage ? (\r\n          <TempMessage message={this.state.tempMessageText} />\r\n        ) : null}\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n  renderPasswordResetScreen() {\r\n    return (\r\n      <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n        <ResetPasswordForm onPasswordReset={this.handlePasswordResetComplete} />\r\n        {this.state.showTempMessage ? (\r\n          <TempMessage message={this.state.tempMessageText} />\r\n        ) : null}\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n\r\n  renderSideBar(gameMaster = true) {\r\n    const { characters, spellCircles, itemDeletionModeOn } = this.state;\r\n    const sideBarWidthCols = this.props.isSmallerScreen ? 4 : 3;\r\n    return (\r\n      <div className={\"SideBar bg-primary col-\" + sideBarWidthCols}>\r\n        <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n          <ActionsMenu\r\n            onCharacterCreation={this.toggleCharacterCreatorPopup}\r\n            onSpellCircleCreation={this.toggleSpellCircleCreatorPopup}\r\n            onCharacterCircleDelete={this.toggleItemDeletionMode}\r\n            onShowPlayersLink={this.togglePlayersLinkPopUp}\r\n            enableDeletion={characters.length > 0 || spellCircles.length > 0}\r\n            itemDeletionModeOn={itemDeletionModeOn}\r\n            onFinishDeletion={this.toggleItemDeletionMode}\r\n            onExitToMenu={this.toggleExitWarningPopUp}\r\n            gameMaster={gameMaster}\r\n            isSmallerScreen={this.props.isSmallerScreen}\r\n          />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n          <DiceRoller isSmallerScreen={this.props.isSmallerScreen} />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMapArea() {\r\n    const {\r\n      rowCount,\r\n      colCount,\r\n      walls,\r\n      cellSize,\r\n      borderWidth,\r\n      selectedChar,\r\n      characters,\r\n      selectedCircle,\r\n      spellCircles,\r\n      matrix,\r\n      placingChar,\r\n      itemDeletionModeOn,\r\n      placingCircle,\r\n      mapImage,\r\n    } = this.state;\r\n\r\n    const mapAreaWidthCols = this.props.isSmallerScreen ? 8 : 9;\r\n\r\n    return (\r\n      <div className={\"MapArea h-100 p-0 col-\" + mapAreaWidthCols}>\r\n        <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n          <MapCanvas\r\n            rowCount={rowCount}\r\n            colCount={colCount}\r\n            walls={walls}\r\n            cellSize={cellSize}\r\n            borderWidth={borderWidth}\r\n            selectedChar={selectedChar}\r\n            characters={characters}\r\n            selectedCircle={selectedCircle}\r\n            spellCircles={spellCircles}\r\n            matrix={matrix}\r\n            onCellClick={this.handleCellClick}\r\n            onCharClick={this.handleCharClick}\r\n            onCalcCharPosition={this.calcCharPosition}\r\n            onCalcSpellCirclePosition={this.calcSpellCirclePosition}\r\n            onMouseEnterCell={this.handleMouseEnterCell}\r\n            placingChar={placingChar}\r\n            itemDeletionModeOn={itemDeletionModeOn}\r\n            onSpellCircleClick={this.handleSpellCircleClick}\r\n            placingCircle={placingCircle}\r\n            mapImage={mapImage}\r\n          ></MapCanvas>\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPopUps() {\r\n    const {\r\n      showTempMessage,\r\n      tempMessageText,\r\n      showCharacterCreatorPopup,\r\n      showSpellCircleCreatorPopup,\r\n      showPlayerLinkPopUp,\r\n      showExitWarningPopUp,\r\n      gameMaster,\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        {showCharacterCreatorPopup ? (\r\n          <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n            <CharacterCreatorPopUp\r\n              closePopup={this.toggleCharacterCreatorPopup}\r\n              onCharacterCreation={this.handleCharacterCreation}\r\n              isSmallerScreen={this.props.isSmallerScreen}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {showSpellCircleCreatorPopup ? (\r\n          <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n            <SpellCircleCreatorPopUp\r\n              closePopup={this.toggleSpellCircleCreatorPopup}\r\n              onSpellCircleCreation={this.handleSpellCircleCreation}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {showPlayerLinkPopUp && gameMaster ? (\r\n          <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n            <PlayersLinkPopUp\r\n              closePopup={this.togglePlayersLinkPopUp}\r\n              onCopyToClipboard={() =>\r\n                this.showTempMessage(\"Link copied to clipboard\", 1500)\r\n              }\r\n              gameLink={PLAYERS_GAME_URL + this.state.authToken}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {showExitWarningPopUp && gameMaster ? (\r\n          <ErrorBoundary FallbackComponent={DefaultFallbackComponent}>\r\n            <ExitWarningPopUp\r\n              closePopup={this.toggleExitWarningPopUp}\r\n              onExitToMenu={this.handleExitToMenu}\r\n            />\r\n          </ErrorBoundary>\r\n        ) : null}\r\n        {showTempMessage ? <TempMessage message={tempMessageText} /> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  renderNotLoggedInError() {\r\n    return (\r\n      <div className=\"HomeBg\">\r\n        <div className=\"HomeBgContent\">\r\n          <ul className=\"MenuUl bg-dark w-100\">\r\n            <h4 className=\"mb-4\">\r\n              <span className=\"creatorHeader\">Hey... unknown user!</span>\r\n              <br></br>\r\n              <br></br>\r\n              Oops! You can't see the game map if you're not logged in :)\r\n              <br></br>\r\n              Please log in to play.\r\n            </h4>\r\n            <Link to=\"/home/login\">Login Here</Link>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMapMainScreen() {\r\n    const { gameMaster } = this.state;\r\n    if (this.state.authToken) {\r\n      return (\r\n        <div className=\"row h-100 w-100 p-0\">\r\n          {this.renderMapArea()}\r\n          {this.renderSideBar(gameMaster)}\r\n          {this.renderPopUps(gameMaster)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.renderNotLoggedInError();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/home\" />\r\n          {this.state.toGameMenu ? (\r\n            <Redirect exact push from=\"/map\" to=\"/home\" />\r\n          ) : null}\r\n          <Route path=\"/reset\">{this.renderPasswordResetScreen()}</Route>\r\n          <Route path=\"/map\">{this.renderMapMainScreen()}</Route>\r\n          <Route path=\"/home\">{this.renderWelcomeScreen()}</Route>\r\n          <Route path=\"/game\">{this.renderMapMainScreen()}</Route>\r\n        </Switch>\r\n        <Persist\r\n          name=\"dnd-app\"\r\n          data={this.state}\r\n          debounce={500}\r\n          onMount={(data) => this.setState(data)}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapSizesToProps = ({ width }) => ({\r\n  isSmallerScreen: width < 1800,\r\n});\r\n\r\nexport default withSizes(mapSizesToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { DEFAULT_MAP_IMG_PATH } from \"./constants\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport BrowserDetection from \"react-browser-detection\";\r\n\r\nconst renderApp = () => {\r\n  return (\r\n    <div className=\"container-fluid DNDMapContainer\">\r\n      <HashRouter>\r\n        <Route path=\"/\">\r\n          <App\r\n            cellSize={45}\r\n            rowCount={15}\r\n            colCount={15}\r\n            bgImageLink={DEFAULT_MAP_IMG_PATH}\r\n          />\r\n        </Route>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst browserHandler = {\r\n  chrome: renderApp,\r\n  firefox: renderApp,\r\n  opera: renderApp,\r\n  default: (browser) => (\r\n    <div>\r\n      Hi {browser}! This app currently only works on Firefox, Chrome and Opera\r\n      browsers. Please use one of them to enter :)\r\n    </div>\r\n  ),\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {isMobile ? (\r\n      <div>\r\n        This app is unavailable on mobile devices. Please use a a desktop to\r\n        enter :)\r\n      </div>\r\n    ) : (\r\n      <BrowserDetection>{browserHandler}</BrowserDetection>\r\n    )}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}